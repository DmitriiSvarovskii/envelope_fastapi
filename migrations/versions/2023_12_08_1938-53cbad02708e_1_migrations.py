"""1 migrations

Revision ID: 53cbad02708e
Revises: 
Create Date: 2023-12-08 19:38:28.893564

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '53cbad02708e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('number_phone', sa.Integer(), nullable=True),
    sa.Column('tg_user_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('deleted_flag', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), server_default=sa.text('null'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number_phone'),
    sa.UniqueConstraint('tg_user_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_employees_id'), 'employees', ['id'], unique=False, schema='public')
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_roles_id'), 'roles', ['id'], unique=False, schema='public')
    op.create_table('units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_units_id'), 'units', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('user_tg_id', sa.BIGINT(), nullable=True),
    sa.Column('number_phone', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('deleted_flag', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), server_default=sa.text('null'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['public.employees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['public.roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number_phone'),
    sa.UniqueConstraint('username'),
    schema='public'
    )
    op.create_index(op.f('ix_public_users_id'), 'users', ['id'], unique=False, schema='public')
    op.create_table('mails',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=False),
    sa.Column('mail_text', sa.String(length=4048), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('deleted_flag', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), server_default=sa.text('null'), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['deleted_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mails_id'), 'mails', ['id'], unique=False)
    op.create_table('bot_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token_bot', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_bot_tokens_id'), 'bot_tokens', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_bot_tokens_token_bot'), 'bot_tokens', ['token_bot'], unique=True, schema='public')
    op.create_table('stores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('region', sa.String(length=64), nullable=True),
    sa.Column('city', sa.String(length=64), nullable=True),
    sa.Column('street', sa.String(length=256), nullable=True),
    sa.Column('number_phone', sa.BIGINT(), nullable=True),
    sa.Column('mobile_phone', sa.BIGINT(), nullable=True),
    sa.Column('coordinates_1', sa.BIGINT(), nullable=True),
    sa.Column('coordinates_2', sa.BIGINT(), nullable=True),
    sa.Column('link_bot', sa.String(length=256), nullable=True),
    sa.Column('delivery', sa.Boolean(), nullable=True),
    sa.Column('takeaway', sa.Boolean(), nullable=True),
    sa.Column('dinein', sa.Boolean(), nullable=True),
    sa.Column('time_zone', sa.String(length=64), nullable=True),
    sa.Column('open_hours', sa.DateTime(), nullable=True),
    sa.Column('close_hours', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('subscription_start_date', sa.DateTime(), nullable=True),
    sa.Column('subscription_duration_months', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_flag', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), server_default=sa.text('null'), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['deleted_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stores_id'), 'stores', ['id'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_access_token'), 'tokens', ['access_token'], unique=True)
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('availability', sa.Boolean(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_flag', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), server_default=sa.text('null'), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['deleted_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.Column('tg_user_id', sa.BIGINT(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('resourse', sa.String(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('store_id', 'tg_user_id', name='uq_store_tg_user')
    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('legal_informations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_organization_name', sa.String(length=4048), nullable=True),
    sa.Column('legal_address', sa.String(), nullable=True),
    sa.Column('legal_phone', sa.BIGINT(), nullable=True),
    sa.Column('inn', sa.BIGINT(), nullable=True),
    sa.Column('ogrn', sa.BIGINT(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_legal_informations_id'), 'legal_informations', ['id'], unique=False)
    op.create_table('payment_and_deliverys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cash', sa.Boolean(), nullable=False),
    sa.Column('card', sa.Boolean(), nullable=False),
    sa.Column('sbp', sa.Boolean(), nullable=False),
    sa.Column('min_order_amount_for_free_delivery', sa.Integer(), nullable=True),
    sa.Column('min_delivery_amount', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_and_deliverys_id'), 'payment_and_deliverys', ['id'], unique=False)
    op.create_table('service_chats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('welcome_message_bot', sa.String(length=4048), nullable=True),
    sa.Column('welcome_image', sa.String(), nullable=True),
    sa.Column('tg_id_group', sa.BIGINT(), nullable=True),
    sa.Column('delivery_chat', sa.BIGINT(), nullable=True),
    sa.Column('order_chat', sa.BIGINT(), nullable=True),
    sa.Column('completed_orders_chat', sa.BIGINT(), nullable=True),
    sa.Column('canceled_orders_chat', sa.BIGINT(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_chats_id'), 'service_chats', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('tg_user_id', sa.BIGINT(), nullable=False),
    sa.Column('delivery_city', sa.String(), nullable=True),
    sa.Column('delivery_address', sa.String(), nullable=True),
    sa.Column('customer_name', sa.String(), nullable=True),
    sa.Column('customer_phone', sa.String(), nullable=True),
    sa.Column('customer_comment', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['store_id', 'tg_user_id'], ['customers.store_id', 'customers.tg_user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_table('subcategories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('availability', sa.Boolean(), nullable=False),
    sa.Column('parent_category_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_flag', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), server_default=sa.text('null'), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['deleted_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subcategories_id'), 'subcategories', ['id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('subcategory_id', sa.Integer(), nullable=True),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('wt', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=False),
    sa.Column('kilocalories', sa.Integer(), nullable=True),
    sa.Column('proteins', sa.Integer(), nullable=True),
    sa.Column('fats', sa.Integer(), nullable=True),
    sa.Column('carbohydrates', sa.Integer(), nullable=True),
    sa.Column('availability', sa.Boolean(), nullable=False),
    sa.Column('popular', sa.Boolean(), nullable=False),
    sa.Column('delivery', sa.Boolean(), nullable=False),
    sa.Column('takeaway', sa.Boolean(), nullable=False),
    sa.Column('dinein', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_flag', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), server_default=sa.text('null'), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['deleted_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subcategory_id'], ['subcategories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['public.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_table('cart',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('tg_user_id', sa.BIGINT(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id', 'tg_user_id'], ['customers.store_id', 'customers.tg_user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cart_id'), 'cart', ['id'], unique=False)
    op.create_table('order_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_details_id'), 'order_details', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_order_details_id'), table_name='order_details')
    op.drop_table('order_details')
    op.drop_index(op.f('ix_cart_id'), table_name='cart')
    op.drop_table('cart')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_subcategories_id'), table_name='subcategories')
    op.drop_table('subcategories')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_service_chats_id'), table_name='service_chats')
    op.drop_table('service_chats')
    op.drop_index(op.f('ix_payment_and_deliverys_id'), table_name='payment_and_deliverys')
    op.drop_table('payment_and_deliverys')
    op.drop_index(op.f('ix_legal_informations_id'), table_name='legal_informations')
    op.drop_table('legal_informations')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_access_token'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_stores_id'), table_name='stores')
    op.drop_table('stores')
    op.drop_index(op.f('ix_public_bot_tokens_token_bot'), table_name='bot_tokens', schema='public')
    op.drop_index(op.f('ix_public_bot_tokens_id'), table_name='bot_tokens', schema='public')
    op.drop_table('bot_tokens', schema='public')
    op.drop_index(op.f('ix_mails_id'), table_name='mails')
    op.drop_table('mails')
    op.drop_index(op.f('ix_public_users_id'), table_name='users', schema='public')
    op.drop_table('users', schema='public')
    op.drop_index(op.f('ix_units_id'), table_name='units')
    op.drop_table('units')
    op.drop_index(op.f('ix_public_roles_id'), table_name='roles', schema='public')
    op.drop_table('roles', schema='public')
    op.drop_index(op.f('ix_public_employees_id'), table_name='employees', schema='public')
    op.drop_table('employees', schema='public')
    # ### end Alembic commands ###
